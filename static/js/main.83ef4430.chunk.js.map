{"version":3,"sources":["Users.js","MessageInput.js","Messages.js","ChatSection.js","Register.js","Login.js","PromptToLogin.js","Layout.js","App.js","serviceWorker.js","index.js"],"names":["Users","this","props","user","users","setReceiver","setPublicChat","otherUsers","Object","keys","filter","u","name","map","i","console","log","className","key","onClick","length","Component","MessageInput","onMessageSubmit","e","preventDefault","setMessage","state","message","setState","errors","onMessageChange","target","setTyping","isTyping","value","submitText","keyCode","userError","errs","mappedErrors","er","classes","id","placeholder","ref","input","textInput","onChange","onKeyDown","Messages","printPublicMessages","publicMessages","mes","time","sender","toUpperCase","slice","printPrivateMessagesOfActiveReceiver","messagesFromThisReceiver","receiver","privateMessagesOfActiveReceiver","activePrivateMessages","userReceiverMes","el","privateMessages","oppositeChatter","popup","publMes","ChatSection","initSocket","socket","on","messages","isPublic","typer","emit","error","Register","onInputChange","onFormSubmit","setUser","JSON","stringify","React","createRef","current","focus","onSubmit","color","size","Login","checkUser","err","matchedUser","PromptToLogin","onLoginClick","loginClicked","onRegisterClick","registerClicked","Layout","config","API_URL","io","cb","App","params","style","width","background","position","zIndex","top","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83ef4430.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Users.css'\r\n\r\nexport default class Users extends Component {\r\n  render() {\r\n    const { user, users, setReceiver, setPublicChat } = this.props   \r\n    \r\n    const otherUsers =\r\n      users && user\r\n        ? Object.keys(users)\r\n            .filter((u) => users[u].name !== user.name)\r\n            .map((u, i) => {\r\n              console.log(users[u].name)\r\n              console.log(users[u])\r\n              return (\r\n                <div className=\"users flex flex-column items-center\">\r\n                  <button\r\n                    className=\"private-user-btn\"\r\n                    key={i}\r\n                    onClick={() => setReceiver(users[u])}\r\n                  >\r\n                    chat with <span className=\"ttc\">{users[u].name}</span> \r\n                  </button>\r\n                  \r\n                </div>\r\n              )\r\n            })\r\n        : null\r\n    return (\r\n      <div className=\"flex flex-column items-center\">\r\n        <div className=\"flex w-100 justify-center\">\r\n          <button className=\"public-btn\" onClick={setPublicChat}>\r\n            Public Chat\r\n          </button>          \r\n        </div>\r\n        <div className=\"divider\"></div>\r\n        <p className=\"private-users-title\">Private chat with users online</p>\r\n        {users && user && Object.keys(users).length === 1 && <p className=\"no-users-warning\">No users online!</p>} \r\n        {otherUsers && otherUsers}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './MessageInput.css';\r\n\r\nexport default class MessageInput extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {message: '', errors: []}\r\n    }\r\n    onMessageSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {setMessage} = this.props;\r\n        const {message} = this.state;\r\n        if(message.length >= 0){\r\n            setMessage(this.state.message);\r\n            this.setState({message: ''});    \r\n        }\r\n        else  {\r\n            const err = 'The message should be at least one character';\r\n            const {errors} = this.state;\r\n            this.setState({errors: [...errors, err] });\r\n        }\r\n        \r\n    }\r\n    onMessageChange = ({target}) => {\r\n        const {setTyping} = this.props;\r\n        let isTyping = target.value.length >= 1 ? true : false;\r\n        this.setState({message: target.value});\r\n        console.log(this.state.message);    \r\n        setTyping(isTyping);    \r\n    }\r\n    submitText = e => {\r\n        if(e.keyCode === 13) {\r\n          this.onMessageSubmit(e);\r\n        }\r\n      }\r\n    render() {\r\n        const {errors} = this.state;\r\n        const {userError} = this.props;\r\n        let errs = [];\r\n        if(userError.length > 0){\r\n            errs = [...errors, userError]\r\n        }\r\n        const mappedErrors = errs.length > 0 ? errs.map((er, i) => {\r\n            return <div key={i}>{er}</div>\r\n        })\r\n            : null;\r\n        const classes = errors.length > 0 ? 'bg-red' : '';\r\n        return (\r\n            <div className='tc bg-grey'>\r\n                <form className='w-100 flex flex-row'>                    \r\n                    <textarea className='w-100 h4 message-input' id='message' placeholder='Enter your message here' \r\n                            ref={(input) => { this.textInput = input}} onChange={this.onMessageChange} value={this.state.message}\r\n                            onKeyDown={this.submitText} />\r\n                    {/* <input type='submit' value='Send' /> */}                    \r\n                </form>\r\n                <div className={classes}>{mappedErrors}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport './Popup.css';\r\nimport './Messages.css';\r\n\r\n\r\n\r\n\r\nexport default class Messages extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {}\r\n    }    \r\n    printPublicMessages = (publicMessages) => {\r\n        const {user} = this.props;\r\n        const publicMes = publicMessages ? \r\n                publicMessages.map((mes, i) => {                   \r\n                    console.log(mes);\r\n                    console.log(mes.time);        \r\n                    return (\r\n                        <div key={i} className={(user && mes.sender) && user.name === mes.sender.name ? 'red f5 ph3 pv2' : ''}>\r\n                            {publicMessages && \r\n                                <div>Message from {mes.user.name[0].toUpperCase() + mes.user.name.slice(1)}\r\n                                    <span> sent at {mes.time}</span>\r\n                                </div>            \r\n                            }\r\n                            \r\n                            <div className='fw6'>{mes.message}</div>             \r\n                        </div>\r\n                    )\r\n                \r\n                }) : null;\r\n       return publicMes;\r\n    }\r\n    /*\r\n\r\n    printPrivateMessages = () => {\r\n        const {privateMessages, user} = this.props;  \r\n        let grouppedMessages = {};             \r\n        if(privateMessages.length > 0){            \r\n            for(const {sender, receiver, id, message, time, isPublic} of privateMessages){\r\n                if(!grouppedMessages[sender.name]){\r\n                    grouppedMessages[sender.name] = [];\r\n                }\r\n                grouppedMessages[sender.name].push({receiver, id, message, time, isPublic});                              \r\n            } \r\n            //this.setState({grouppedMessages});   \r\n                \r\n        }        \r\n        console.log(privateMessages);\r\n        console.log(grouppedMessages);\r\n        const privateMessagesBySender = grouppedMessages ? Object.keys(grouppedMessages).map((senderOfThisMessage, i) => {\r\n                    return (\r\n                        <div key={i} className='ma2 ba'>\r\n                            <div>Chat with {senderOfThisMessage}</div>\r\n                            {\r\n                                grouppedMessages[senderOfThisMessage].map((mes, i) => {\r\n                                    console.log(mes);\r\n                                    return (\r\n                                        <div key={i} className={(user && mes.receiver) && user.name === mes.receiver.name ? '' : 'red f5'}>                    \r\n                                            <div>{mes.message}</div>\r\n                                            <div>sent at {mes.time}</div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    )                    \r\n                }) : null\r\n        return privateMessagesBySender;\r\n    }   \r\n    \r\n    */\r\n   //activePrivateMessages is array of messages related to the sender (user) with corresponding private receivers\r\n   printPrivateMessagesOfActiveReceiver = (messagesFromThisReceiver) => {   \r\n      \r\n       return messagesFromThisReceiver.map(mes => {\r\n           console.log(mes);\r\n           console.log(this.props.user)\r\n           return (\r\n               <div className=\"\">\r\n                   <div key={mes.id} className=\"flex items-center justify-start\">\r\n                        {this.props.user.name !== mes.receiver.name && \r\n                            <p className=\"pink fw3 f6\">{this.props.user.name} to {mes.receiver.name}</p>                \r\n                        }               \r\n                        <span className='ml2 green'>Sent at {mes.time}</span>\r\n                \r\n                    </div>\r\n                    <p className=\"message-text\">{mes.message}</p>\r\n               </div>\r\n           \r\n           );\r\n       })\r\n   }\r\n   privateMessagesOfActiveReceiver = (activePrivateMessages) => {\r\n       const {receiver} = this.props;   \r\n       console.log(receiver.name); \r\n       const userReceiverMes =  activePrivateMessages.filter((el) => {\r\n           console.log(receiver.name, el.receiver.name)\r\n           return el.receiver.name === receiver.name; \r\n       });\r\n       console.log(userReceiverMes, activePrivateMessages);\r\n       return userReceiverMes;\r\n   }\r\n\r\n    render(){   \r\n        const {publicMessages, privateMessages, activePrivateMessages, oppositeChatter, popup} = this.props;  \r\n         console.log(publicMessages, privateMessages, activePrivateMessages, oppositeChatter);\r\n         const popupClass = popup ? 'popup' : '';\r\n         const classes = `fw3 f6 ${popupClass}`;\r\n\r\n         let publMes = !publicMessages ? null : publicMessages.length > 0 ? this.printPublicMessages(publicMessages) : null;\r\n        return (\r\n            \r\n            <div className='w-100 h-100 bg-white flex br2'>                \r\n                <div className='bg-light-gray w-50 pa2'>\r\n                    <div className='tc fw3 f5 ttu mb2'><span className='fw4 f4'>public Messages</span></div>\r\n                    {publMes}                    \r\n                </div>   \r\n                \r\n               \r\n                <div className='bl bw2 pa2 w-50'>\r\n                    <div className='tc fw3 f5 ttu'><span className='fw4 f4 mb2'>private Messages</span></div>\r\n                     {activePrivateMessages.length === 0 && <p>So far no messages sent!</p>}\r\n                     {activePrivateMessages.length > 0 && \r\n                        <div className=\"\">                            \r\n                                                 \r\n                            <p>{this.printPrivateMessagesOfActiveReceiver(this.privateMessagesOfActiveReceiver(activePrivateMessages)) }</p>  \r\n                        </div>                        \r\n                    }                       \r\n                </div>                \r\n                            \r\n                \r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\n ","import React, { Component } from 'react';\r\nimport Users from './Users';\r\nimport MessageInput from './MessageInput';\r\nimport Messages from './Messages';\r\nimport './ChatSection.css';\r\n\r\nexport default class ChatSection extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = { receiver: null, oppositeChatter: null, publicMessages: null, privateMessages: null, activePrivateMessages: [], \r\n                        isPublic: true, error: '', typer: null, isTyping: false, popup: false}\r\n    }\r\n    componentWillMount(){        \r\n        this.initSocket(this.props.socket);        \r\n      }\r\n      initSocket = (socket) => {                            \r\n        \r\n\r\n        //oppositeChatter is receiver if this user is sender, and is user if it received message from the user\r\n        //popup will be true for the receiver, not sender\r\n        socket.on('MESSAGE', (messages, isPublic, oppositeChatter, receiver, popup) => { \r\n                    \r\n           isPublic ? this.setState({publicMessages: messages}) :\r\n                 this.setState({activePrivateMessages: messages, oppositeChatter, popup, receiver});        \r\n        }                         \r\n        );\r\n        socket.on('TYPING', (isTyping, typer) => {      \r\n            this.setState({isTyping, typer});\r\n        });  \r\n    }\r\n    \r\n    setReceiver = (receiver) => {        \r\n        this.setState({receiver, isPublic: false});\r\n        console.log(receiver);\r\n    }\r\n    \r\n    \r\n    setPublicChat = () => {\r\n        this.setState({ receiver: null, isPublic: true});\r\n    }\r\n    setMessage = (message) => {\r\n        const {socket, user} = this.props;\r\n        const {isPublic, receiver} = this.state;     \r\n        console.log(user, receiver);\r\n        this.setReceiver(this.state.receiver);\r\n        if(user){ \r\n          socket.emit('MESSAGE', message, user, isPublic, receiver);          \r\n         }         \r\n         else {\r\n            this.setState({error: 'before sending a message, please first log in'});\r\n         }\r\n\r\n        this.setTyping(false);   \r\n    }\r\n    setTyping = (isTyping) => {\r\n        const {socket, user} = this.props;\r\n        const {isPublic, receiver} = this.state;\r\n        socket.emit('TYPING', isTyping, isPublic, user, receiver);    \r\n    }\r\n    \r\n    \r\n    render() {\r\n        const {oppositeChatter, error, publicMessages, privateMessages, activePrivateMessages, isPublic, popup, receiver} = this.state;\r\n        const {user, users} = this.props;\r\n        console.log(activePrivateMessages, publicMessages, privateMessages, oppositeChatter, popup, isPublic, receiver);\r\n        \r\n        return (               \r\n                <div className='chatsection'>                \r\n                    <div className='users bg-light-blue'>\r\n                        <div className='f4 fw6 mb2 tc red ttc'>{user && user.name}</div>\r\n                        <Users users={users} user={user} setReceiver={this.setReceiver} setPublicChat={this.setPublicChat} />\r\n                    </div>                \r\n                    <div className='messages'><Messages oppositeChatter={oppositeChatter} publicMessages={publicMessages} privateMessages={privateMessages}\r\n                                 activePrivateMessages={activePrivateMessages} user={user} isPublic={isPublic} popup={popup} receiver={receiver} /></div>\r\n                        \r\n                    <div className='input'><MessageInput setMessage={this.setMessage} userError={error} setTyping={this.setTyping} />\r\n                    </div>                     \r\n                </div>                  \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {FaSadTear} from 'react-icons/fa';\r\n\r\n\r\nexport default class Register extends Component {\r\n    constructor(){\r\n        super();\r\n        this.textInput = React.createRef();\r\n        this.state = {name: '', user: null, error: ''}\r\n    }\r\n    componentDidMount(){\r\n      this.textInput.current.focus();\r\n    }\r\n    onInputChange = ({target}) => {\r\n        this.setState({name: target.value});\r\n        console.log(this.state.name);\r\n      }\r\n    onFormSubmit = (e) => {\r\n       const {socket, setUser} = this.props;\r\n        e.preventDefault();        \r\n        const {name} = this.state;               \r\n        if(name.length <= 0){\r\n            const err = 'You have not entered any name';                    \r\n            this.setState({error: err});\r\n        }\r\n        else {\r\n          socket.emit('NAME', this.state.name, ({error, user}) =>{\r\n            console.log(`error: ${error}, user: ${JSON.stringify(user)}`);\r\n            if(user){\r\n              setUser(user);     \r\n              this.setState({error: ''})          \r\n            }\r\n            else{            \r\n              this.setState({error});\r\n            }             \r\n          });      \r\n        }\r\n        \r\n      }\r\n    render() {\r\n        console.log(this.props.socket);\r\n        const {error} = this.state;                 \r\n        return (\r\n          <div className='w-50'>\r\n            <div className='tc h5 bg-white o-30 flex flex-column justify-center items-center ttu dark-blue grow'>\r\n                <div className='mb4 f3 fw4'>Enter Your Name to Register for Chat</div>\r\n                <form className='w-50 f4 flex' onSubmit={this.onFormSubmit}>                    \r\n                    <input className='ph2 ttc ml3 f3 fw7 black' onChange={this.onInputChange} ref={this.textInput} id='name' placeholder={'Enter Your Name'} value={this.state.name} /> \r\n                    <button className='ml2 bg-light-blue fw9 ttu'>ok</button>                           \r\n                </form>                                             \r\n            </div>\r\n            {error.length > 0 && <div className='f4 fw3 white mt3 tracked ttu tc flex justify-center items-center'>{error} <FaSadTear color='red' size='1.5em' /></div>}                  \r\n          </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n    ","\r\nimport React, { Component } from 'react';\r\nimport {FaSadTear} from 'react-icons/fa';\r\n\r\n\r\nexport default class Login extends Component {\r\n    constructor(){\r\n        super();\r\n        this.textInput = React.createRef();\r\n        this.state = {name: '', error: '', matchedUser: false}\r\n    }\r\n    componentDidMount(){\r\n        this.textInput.current.focus();\r\n    }\r\n    onInputChange = ({target}) => {\r\n        this.setState({name: target.value});        \r\n      }\r\n    onFormSubmit = (e) => {\r\n        const {name} = this.state;  \r\n        const {checkUser} = this.props;       \r\n        e.preventDefault();                       \r\n        if(name.length <= 0){\r\n            const error = 'You have not entered any name';                    \r\n            this.setState({error});\r\n        }        \r\n        else {\r\n            checkUser(name, (err) => {\r\n                this.setState({error: err})\r\n            });\r\n            \r\n        }        \r\n      }\r\n    render() {       \r\n        const {error, name} = this.state;   \r\n        \r\n           \r\n                 \r\n        return ( \r\n            <div className='w-50'>\r\n                <div className='tc h5 bg-white o-30 flex flex-column justify-center items-center ttu dark-blue grow'>\r\n                    <div className='mb4 f3 fw7 black'>Enter your name to login</div>\r\n                    <form className='w-50 f4 flex' onSubmit={this.onFormSubmit}>                      \r\n                        <input className='ph2 ttc ml3 f3 fw7 black' onChange={this.onInputChange} ref={this.textInput} id='name' placeholder={'Enter Your Name'} value={name} /> \r\n                        <button className='ml2 bg-light-blue fw9 ttu'>ok</button>                            \r\n                    </form>                       \r\n                </div>           \r\n                {error.length > 0 && <div className='f4 fw3 white mt3 tracked ttu tc flex justify-center items-center'>{error} <FaSadTear color='red' size='1.5em' /></div>} \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport './PromptToLogin.css';\r\nimport Register from './Register';\r\nimport Login from './Login';\r\n\r\n\r\nexport default class PromptToLogin extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            loginClicked: false, registerClicked: false\r\n        }\r\n    }\r\n    onLoginClick = () => {\r\n        this.setState({loginClicked: true});\r\n    }\r\n    onRegisterClick = () => {\r\n        this.setState({registerClicked: true});\r\n    }\r\n    render() {\r\n        const classes = `pa4 f4 br2 grow ma2 ttu tc fw7 dark-gray bg-white o-40`;        \r\n        const {loginClicked, registerClicked} = this.state;\r\n        const {socket, setUser, users, checkUser} = this.props;\r\n        return (\r\n            <div className='container'>\r\n                {!loginClicked && !registerClicked ? \r\n                    (<div className='auth'>\r\n                         <div className={`login ${classes}`} onClick={this.onLoginClick}>Login</div>\r\n                         <div className={`register ${classes}`} onClick={this.onRegisterClick} >Register</div>\r\n                    </div>)\r\n                   \r\n                    :\r\n                    registerClicked ? <Register socket={socket} setUser={setUser} /> :\r\n                    <Login users={users} checkUser={checkUser} />\r\n            }\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport io from 'socket.io-client'\r\nimport ChatSection from './ChatSection'\r\nimport './Layout.css'\r\nimport PromptToLogin from './PromptToLogin'\r\n\r\nexport default class Layout extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = { socket: null, user: null, users: null, matchedUser: false }\r\n  }\r\n  componentWillMount() {\r\n    this.initSocket(this.props.socket)\r\n  }\r\n\r\n  initSocket = () => {\r\n    const prod = {        \r\n            API_URL: 'https://myapp.herokuapp.com'        \r\n    };\r\n    const dev = {       \r\n            API_URL: 'http://localhost:5000'        \r\n    };\r\n    const config = process.env.NODE_ENV === 'development' ? dev : prod;\r\n    const socket = io(config.API_URL).on('connect', () => {\r\n      console.log('connected to server')\r\n    })\r\n    this.setState({ socket })\r\n    socket.on('USERS', (users) => {\r\n      console.log(users)\r\n      if (users) {\r\n        this.setState({ users })\r\n      }\r\n    })\r\n  }\r\n  setUser = (user) => {\r\n    console.log(user)\r\n    const { socket } = this.state\r\n    socket.emit('USER_TO_USERS', user)\r\n    this.setState({ user })\r\n  }\r\n  //check if user attempting to log in already in redistered users list\r\n  checkUser = (name, cb) => {\r\n    console.log(`checking user with name ${name}`)\r\n    this.state.socket.emit('CHECKUSER', name, (user) => {\r\n      const error = !user ? 'The name you entered does not match our data' : ''\r\n      this.setState({ user })\r\n      cb(error)\r\n    })\r\n  }\r\n  render() {\r\n    const { socket, user, users } = this.state\r\n    console.log(users)\r\n    // const classes = {display: 'flex', justifyContent: 'center', alignItems: 'center'}\r\n    return (\r\n      <div className=\"container vh-100\">\r\n        <div className=\"element pa4\">\r\n          {!user ? (\r\n            <PromptToLogin\r\n              user={user}\r\n              socket={socket}\r\n              setUser={this.setUser}\r\n              users={users}\r\n              checkUser={this.checkUser}\r\n            />\r\n          ) : (\r\n            <ChatSection socket={socket} user={user} users={users} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// <Login socket={socket} setUser={this.setUser}/>\r\n","import React, {Component} from 'react';\nimport Layout from './Layout';\nimport Particles from 'react-particles-js';\n\nclass App extends Component{\n  render(){\n       \n    return (\n      <div>\n       <Particles\n                params={{\n                    \"particles\": {\n                        \"line_linked\": {\n                                    \"color\":\"#FFFFFF\"\n                                    },\n                        \"number\": {\n                            \"value\": 250\n                        },\n                        \"size\": {\n                            \"value\": 5\n                        }\n                    },\n                    \"interactivity\": {\n                        \"events\": {\n                            \"onhover\": {\n                                \"enable\": true,\n                                \"mode\": \"repulse\"\n                            }\n                        }\n                    }\n                }}\n                style={{\n                        width: '100%',\n                        background: `#1E90FF`,\n                        position: 'absolute',\n                        zIndex: 1\n                 }}\n                />\n        \n        <div style={{ position: 'relative', top: 0, zIndex: 200 }}>\n           <Layout />  \n        </div>        \n      </div>\n    );\n  }  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}